variables:
  SERVICE_NAME: "ob.transfers.ui"
  GIT_CLEAN_FLAGS: none
  NAMESPACE: "onbank"
  DEPLOYMENT: "transfers-ui"
  ENVID: "1674"
  REGISTRYPATH: "web"
  REGISTRY: "registry.kmf.kz"
  GIT_DEPTH: 200

services:
  - name: docker:dind
    command: ["--registry-mirror", "https://registry.kmf.kz"]
    alias: docker

stages:
  - prepare
  - test
  - build
  - setimage
  - check
  - git_tag
  - notify

app_version:
  stage: prepare
  artifacts:
    expire_in: 5 min
    paths:
      - app_version
  only:
    - master
    - staging
    - dev
  image: docker:git
  script:
    - if [ -f "./app_version" ]; then echo "File app_version exists, removing..."; rm ./app_version; else echo "File app_version does not exist"; fi
    - COMMIT_COUNT=$(git rev-list --no-merges --count HEAD)
    - APP_VERSION=$([ -f ./app_version ] && cat ./app_version || echo "1.0")
    - VERSION=$APP_VERSION.$COMMIT_COUNT-$CI_COMMIT_BRANCH
    - echo $VERSION > app_version

node_lint:
  stage: test
  allow_failure: true
  only:
    - dev
  image: node:18.16.0
  script:
    - npm i
    - npm root -g
    - npm install -g eslint
    - npm install eslint-plugin-prettier
    - npx eslint --init
    - eslint . --resolve-plugins-relative-to=$(npm root -g)

dockerfile_lint:
  stage: test
  only:
    - dev
  image: projectatomic/dockerfile-lint
  script:
    - dockerfile_lint ./Dockerfile

tslint:
  stage: test
  only:
    - dev
  image: registry.gitlab.com/pipeline-components/tslint:latest
  script:
    - tslint 'src/**/*.ts'

sonarqube_scan:
  stage: test
  only:
    - dev
  image: sonarsource/sonar-scanner-cli
  allow_failure: true
  script:
    - sonar-scanner -Dsonar.login=$SONARQUBE_TOKEN -Dsonar.projectKey="WEB:$SERVICE_NAME" -Dsonar.host.url="https://sonarqube.kmf.kz" -Dsonar.qualitygate.wait=true

build:
  stage: build
  only:
    - dev
    - staging
    - master
  before_script:
    - mv ./config/.env.* ./
    - apk add --no-cache --update nodejs npm git
    - npm i sharp
    - npm i fs
    - npm i path
    - node ./converter/converter.js
    - npm install --save-dev --save-exact prettier -f
    - npx prettier --write "{,!(node_modules)/**/}*.{ts,tsx,vue}"
  script:
    - node -v
    - npm install
    - npm run build:$CI_COMMIT_REF_NAME;
    - VERSION=$(cat ./app_version)
    - sed -i "s/cicd_app_version/$VERSION/" ./Dockerfile
    - if grep -q "cicd_app_version" ./Dockerfile; then echo "Replacement check failed!"; exit 1; else echo "Replacement check success!"; fi
    - docker image ls
    - docker build -t $REGISTRY/$REGISTRYPATH/$SERVICE_NAME:$CI_COMMIT_BRANCH-v.$CI_PIPELINE_IID -t $REGISTRY/$REGISTRYPATH/$SERVICE_NAME:v.$CI_PIPELINE_IID .
    - docker login -u $DOCKER_REGISTRY_USER -p $DOCKER_REGISTRY_PASSWORD https://$REGISTRY/
    - docker push --all-tags $REGISTRY/$REGISTRYPATH/$SERVICE_NAME

setimage:
  stage: setimage
  only:
    - dev
    - staging
    - master
  image: curlimages/curl:7.85.0
  script:
    - if curl --output /dev/null --silent --head --header "PRIVATE-TOKEN:$BBUSER_TOKEN" --fail "https://gitlab.kmf.kz/api/v4/projects/$ENVID/repository/files/deployment.$CI_COMMIT_BRANCH.yml/raw?ref=master"; then echo "File exist"; else echo "File does not exist" && exit 1; fi
    - curl -X GET --silent "https://gitlab.kmf.kz/api/v4/projects/$ENVID/repository/files/deployment.$CI_COMMIT_BRANCH.yml/raw?ref=master" --header "PRIVATE-TOKEN:$BBUSER_TOKEN" -o deployment.$CI_COMMIT_BRANCH.yml
    - cat deployment.$CI_COMMIT_BRANCH.yml
    - |
      sed -i 's/image:.*$/'"image: $REGISTRY\/$REGISTRYPATH\/$SERVICE_NAME:$CI_COMMIT_BRANCH-v.$CI_PIPELINE_IID"'/g' deployment.$CI_COMMIT_BRANCH.yml
    - cat deployment.$CI_COMMIT_BRANCH.yml
    - curl -X PUT --silent "https://gitlab.kmf.kz/api/v4/projects/$ENVID/repository/files/deployment.$CI_COMMIT_BRANCH.yml?ref=master" --header "PRIVATE-TOKEN:$BBUSER_TOKEN" -F "branch=master" -F "author_email=devops@kmf.kz" -F "author_name=bbuser" -F "content=<deployment.$CI_COMMIT_BRANCH.yml" -F "commit_message=change_image for $CI_COMMIT_BRANCH to v.$CI_PIPELINE_IID"

check:
  stage: check
  only:
    - dev
    - staging
    - master
  image: registry.kmf.kz/dev/tools/kubectl:alpine
  before_script:
    - KUBERCONFIG=KUBERCONFIG_$CI_COMMIT_BRANCH
    - export KUBERCONFIG=$( eval echo \$$KUBERCONFIG )
  script:
    - sleep 10
    - kubectl rollout status deployment $DEPLOYMENT -n $NAMESPACE --kubeconfig $KUBERCONFIG

git_tag_api:
  stage: git_tag
  image: curlimages/curl:7.85.0
  only:
    - dev
    - staging
    - master
  script:
    - curl -X DELETE --silent "https://gitlab.kmf.kz/api/v4/projects/$CI_PROJECT_ID/repository/tags/$CI_COMMIT_REF_NAME-latest" --header "PRIVATE-TOKEN:$BBUSER_TOKEN"
    - curl -X POST --silent "https://gitlab.kmf.kz/api/v4/projects/$CI_PROJECT_ID/repository/tags?tag_name=$CI_COMMIT_REF_NAME-latest&ref=$CI_COMMIT_SHA" --header "PRIVATE-TOKEN:$BBUSER_TOKEN"
    - curl -X POST --silent "https://gitlab.kmf.kz/api/v4/projects/$CI_PROJECT_ID/repository/tags?tag_name=v.$CI_PIPELINE_IID&ref=$CI_COMMIT_SHA" --header "PRIVATE-TOKEN:$BBUSER_TOKEN"

telegram:
  stage: notify
  image: alpine:latest
  when: always
  only:
    - master
    - staging
    - dev
  script:
    - apk add curl jq
    - JOB_NAME=$(curl --location -g --request GET https://gitlab.kmf.kz/api/v4/projects/$CI_PROJECT_ID/pipelines/$CI_PIPELINE_ID/jobs?scope[]=failed --header "PRIVATE-TOKEN:$BBUSER_TOKEN" | jq '.[] | select(.allow_failure==false) | .name')
    - if [ -z "$JOB_NAME" ]; then JOB_STATUS=success; else JOB_STATUS=failed; fi
    - author=$(echo $CI_COMMIT_AUTHOR | awk -F '<' '{print $1}')
    - 'message=$(echo -e "Runner:&#160;Gitlab\n\nbuild number:&#160;$CI_PIPELINE_IID\nrepo:&#160;<a href=\"$CI_PROJECT_URL\">$CI_PROJECT_TITLE</a>\nfailed steps:&#160;<code>$JOB_NAME</code>\n\nmessage:&#160;$CI_COMMIT_MESSAGE\n\n&#128073&#160;$CI_COMMIT_BRANCH environment\n\nCommit by:&#160;$author")'
    - echo $message
    - if [[ $CI_PROJECT_ROOT_NAMESPACE == *"onbank"* ]]; then if [ "$CI_COMMIT_REF_NAME" == "master" ]; then TOPIC="13"; elif [ "$CI_COMMIT_REF_NAME" == "staging" ]; then TOPIC="11"; else TOPIC="9"; fi && curl -sv -X POST "https://dev-svc.kmf.kz/api/alert/onbank/?appName=$SERVICE_NAME&topicId=$TOPIC&silent=false&users=$TG_CMA_BACK_USERS&status=$JOB_STATUS&queue=true&environment=$CI_COMMIT_REF_NAME&formatted=true" -d "$message";
      else curl -sv -X POST "https://dev-svc.kmf.kz/api/tg/deployer?appName=$SERVICE_NAME&silent=false&users=$TG_USERS&status=$JOB_STATUS&queue=true&environment=$CI_COMMIT_REF_NAME" -d "$message";
      fi
